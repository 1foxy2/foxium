public net.minecraft.server.level.DistanceManager$ChunkTicketTracker
public net.minecraft.server.level.ServerChunkCache$MainThreadExecutor
public net.minecraft.server.level.ChunkMap$TrackedEntity
public net.minecraft.server.level.ChunkMap$DistanceManager
public net.minecraft.world.phys.shapes.IndexMerger
public net.minecraft.world.level.chunk.PaletteResize
public net.minecraft.world.level.chunk.PalettedContainer$Data
public net.minecraft.world.level.chunk.PalettedContainer$Configuration

public net.minecraft.server.level.ChunkMap$TrackedEntity entity # entity
public net.minecraft.world.phys.shapes.VoxelShape shape # shape

public net.minecraft.world.level.levelgen.synth.SimplexNoise GRADIENT # GRADIENT

public net.minecraft.world.level.chunk.PalettedContainer$Configuration <init>(Lnet/minecraft/world/level/chunk/Palette$Factory;I)V
public net.minecraft.world.level.chunk.PalettedContainer$Strategy calculateBitsForSerialization(Lnet/minecraft/core/IdMap;I)I # calculateBitsForSerialization
public net.minecraft.world.level.chunk.PalettedContainer$Strategy <init>(I)V
public net.minecraft.world.level.material.Fluid isEmpty()Z # isEmpty
public net.minecraft.world.level.material.EmptyFluid isEmpty()Z # isEmpty
public net.minecraft.server.level.ChunkHolder addSaveDependency(Ljava/util/concurrent/CompletableFuture;)V # addSaveDependency
public net.minecraft.server.level.Ticket timedOut(J)Z # timedOut
public net.minecraft.world.phys.shapes.CubePointRange <init>(I)V
public net.minecraft.world.phys.shapes.VoxelShape getCoords(Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; # getCoords
public net.minecraft.world.phys.shapes.VoxelShape <init>(Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;)V
public net.minecraft.world.phys.shapes.Shapes findBits(DD)I # findBits

public net.minecraft.util.Mth SIN # SIN

public net.minecraft.server.level.ServerLevel$EntityCallbacks
public net.minecraft.world.level.Level isOutsideSpawnableHeight(I)Z # isOutsideSpawnableHeight

public net.minecraft.nbt.CompoundTag <init>(Ljava/util/Map;)V

public net.minecraft.world.level.border.WorldBorder$BorderExtent

public net.minecraft.world.level.pathfinder.WalkNodeEvaluator getPathTypeFromState(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/PathType; # getPathTypeFromState

public net.minecraft.world.entity.ai.village.poi.PoiSection isValid()Z # isValid

public net.minecraft.util.SortedArraySet <init>(ILjava/util/Comparator;)V

public net.minecraft.server.level.Ticket createdTick # createdTick